{
  "editor.fontSize": 15,
  "projectManager.git.baseFolders": [
    "~/projects",
    "~/fauna"
  ],
  "git.autofetch": true,
  "vim.sneak": true,
  "vim.easymotion": true,
  "vim.leader": ",",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "s"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "s"
      ]
    },
  ],
  "vim.handleKeys": {
    "<command-c>": false,
    "<command-v>": false
  },
  "vim.insertModeKeyBindings": [
    {
        "before": ["f", "d"],
        "after": ["<Esc>"]
    }
  ],
  "files.autoSave": "onWindowChange",
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "editor.tabSize": 8,
  "editor.cursorStyle": "line",
  "editor.insertSpaces": false,
  "editor.lineNumbers": "on",
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",
  "emmet.showExpandedAbbreviation": "inMarkupAndStylesheetFilesOnly",
  "tabnine.experimentalAutoImports": true,
  // "editor.fontFamily": "Firicico, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontFamily": "Menlo, Monaco, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": [
          //following will be in italics (=Pacifico)
          //"comment",
          "entity.name.type.class", //class names
          "keyword", //import, export, return…
          //"support.class.builtin.js", //String, Number, Boolean…, this, super
          "storage.modifier", //static keyword
          "storage.type.class.js", //class keyword
          "storage.type.function.js", // function keyword
          "storage.type.js", // Variable declarations
          "keyword.control.import.js", // Imports
          "keyword.control.from.js", // From-Keyword
          //"entity.name.type.js", // new … Expression
          "keyword.control.flow.js", // await
          "keyword.control.conditional.js", // if
          "keyword.control.loop.js", // for
          "keyword.operator.new.js", // new
          "storage.type.class.ts", //class keyword
          "storage.type.function.ts", // function keyword
          "storage.type.ts", // Variable declarations
          "keyword.control.import.ts", // Imports
          "keyword.control.from.ts", // From-Keyword
          //"entity.name.type.ts", // new … Expression
          "keyword.control.flow.ts", // await
          "keyword.control.conditional.ts", // if
          "keyword.control.loop.ts", // for
          "keyword.operator.new.ts", // new
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": [
          "support.class.ruby",
          "keyword.key.toml"
        ],
        "settings": {
          "fontStyle": ""
        }
      },
    ]
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.inlineSuggest.enabled": true,
  "github.copilot.autocomplete.enable": true,
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": false
  },
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "problems.showCurrentInStatus": true,
  "files.exclude": {
    "**/node_modules": true
  },
  "vim.useCtrlKeys": true,
// "typescript.tsserver.experimental.enableProjectDiagnostics": true,
"editor.snippetSuggestions": "top",
"workbench.colorTheme": "Dracula",
"[jsonc]": {
  "editor.defaultFormatter": "esbenp.prettier-vscode"
},
"window.zoomLevel": 1,
"[json]": {
  "editor.defaultFormatter": "esbenp.prettier-vscode"
}
}